# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          [
            'configprops',
            'env',
            'health',
            'info',
            'jhimetrics',
            'logfile',
            'loggers',
            'prometheus',
            'threaddump',
            'caches',
            'liquibase',
            'conditions',
          ]
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
  health:
    group:
      liveness:
        include: livenessState
      readiness:
        include: readinessState,datasource
    mail:
      enabled: true # When using the MailService, configure an SMTP server and set this to true
  metrics:
    export:
      # Prometheus is the default metrics backend
      prometheus:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true

spring:
  application:
    name: familytree
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by maven when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: #spring.profiles.active#
    group:
      dev:
        - dev
  #        - api-docs
  # Uncomment to activate TLS for the dev profile
  #- tls
  jmx:
    enabled: false
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
  task:
    execution:
      thread-name-prefix: familytree-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: familytree-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
  output:
    ansi:
      console-available: true
  cache:
    cache-names:
      - buckets

hazelcast:
  network:
    join:
      multicast:
        enabled: true
  phone:
    home:
      enabled: false

bucket4j:
  enabled: true
  filters:
    - cache-name: buckets
      url: .*
      filter-method: SERVLET
      filter-order: 100 # just to make sure that it is after JWTFilter
      strategy: first # the first matching rate limit will be executed and only one will be executed
      http-response-body: '{ "status": 429, "title": "Too Many Requests", "message": {"ar": "لقد استنفدت حصة الطلبات الخاصة بك", "en": "You have exhausted your API Request Quota"} }'
      metrics:
        enabled: true
        types: CONSUMED_COUNTER,REJECTED_COUNTER
        tags:
          - key: IP
            expression: 'getRemoteAddr()'
            types: REJECTED_COUNTER
          - key: URL
            expression: 'getRequestURI()'
          - key: USERNAME
            expression: 'T(com.familytree.security.SecurityUtils).getCurrentUserEmail().orElse("anonym")'
      rate-limits:
        - execute-condition: '!T(com.familytree.security.SecurityUtils).isAuthenticated()' # For not logged in users
          expression: 'getRemoteAddr()'
          bandwidths:
            - capacity: 20
              time: 1
              unit: seconds
            - capacity: 100
              time: 1
              unit: minutes
        - execute-condition: 'T(com.familytree.security.SecurityUtils).isAuthenticated()' # For logged in users
          expression: 'T(com.familytree.security.SecurityUtils).getCurrentUserEmail().orElse(getRemoteAddr())'
          bandwidths:
            - capacity: 30
              time: 1
              unit: seconds
            - capacity: 1000
              time: 1
              unit: minutes

server:
  servlet:
    session:
      cookie:
        http-only: true

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'familyTreeApp'
  # By default CORS is disabled. Uncomment to enable.
  # cors:
  #   allowed-origins: "http://localhost:8100,http://localhost:9000"
  #   allowed-methods: "*"
  #   allowed-headers: "*"
  #   exposed-headers: "Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params"
  #   allow-credentials: true
  #   max-age: 1800
  mail:
    from: familytreeksa@gmail.com
  api-docs:
    default-include-pattern: ${server.servlet.context-path:}/api/.*
    management-include-pattern: ${server.servlet.context-path:}/management/.*
    title: familytree API
    description: familytree API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
  security:
    content-security-policy: "default-src 'self'; frame-src 'self' https://www.google.com/ data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://storage.googleapis.com https://www.google.com https://www.gstatic.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data:; font-src 'self' https://fonts.gstatic.com https://fonts.gstatic.com data:"

logging:
  pattern:
    console: ${CONSOLE_LOG_PATTERN:%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr([%X{transaction_id} %X{username}]) %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}
    file: ${CONSOLE_LOG_PATTERN:%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr([%X{transaction_id} %X{username}]) %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}
  file:
    name: /opt/logs/${spring.application.name}.log
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

application:
  captcha:
    enabled: false
    recaptchaVerifyUrl: 'https://www.google.com/recaptcha/api/siteverify'
    siteKeyInvisible: '6LdUGowbAAAAANptJwc8KU7aVBHbJv_ezvrWZVZL'
    secretKeyInvisible: '6LdUGowbAAAAADfUIcdqnD8gwPOEirIuMvepPfnX'
  fileScanning:
    enabled: false
    ip: localhost
    port: 3310
    timeout: 2000
  sftp:
    username: foo
    password: pass
    host: localhost
    port: 8022
